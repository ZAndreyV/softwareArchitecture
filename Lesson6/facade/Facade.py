"""
Паттерн "Фасад" (Facade) позволяет предоставить унифицированный интерфейс к группе интерфейсов в подсистеме.
 Вот пример реализации паттерна Фасад на языке программирования Python:
"""
# Подсистема 1
class Subsystem1:
    def operation1(self):
        print("Выполняется операция 1 в подсистеме 1")

    def operation2(self):
        print("Выполняется операция 2 в подсистеме 1")

# Подсистема 2
class Subsystem2:
    def operation1(self):
        print("Выполняется операция 1 в подсистеме 2")

    def operation2(self):
        print("Выполняется операция 2 в подсистеме 2")

# Фасад
class Facade:
    def __init__(self):
        self.subsystem1 = Subsystem1()
        self.subsystem2 = Subsystem2()

    def operation(self):
        self.subsystem1.operation1()
        self.subsystem1.operation2()
        self.subsystem2.operation1()
        self.subsystem2.operation2()

# Пример использования
facade = Facade()
facade.operation()

"""
В этом примере классы Subsystem1 и Subsystem2 представляют подсистемы, которые имеют собственные операции.
 Класс Facade предоставляет унифицированный интерфейс и скрывает сложность взаимодействия между подсистемами.
  Метод operation фасада выполняет необходимые операции, делегируя их соответствующим методам внутри подсистем.

При запуске примера вывод будет следующим:

Выполняется операция 1 в подсистеме 1
Выполняется операция 2 в подсистеме 1
Выполняется операция 1 в подсистеме 2
Выполняется операция 2 в подсистеме 2

Таким образом, паттерн Фасад предоставляет простой и унифицированный интерфейс к сложной подсистеме,
 делая взаимодействие с ней более удобным для клиента.
"""